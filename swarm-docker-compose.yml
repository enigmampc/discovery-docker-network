version: '3'

services:

  contract:
    image: avishaiw/enigma_contract:0.1
    deploy:
      placement:
        constraints:
          - node.labels.type == contract
    stdin_open: true
    tty: true
    networks:
      - net
    hostname: contract
    entrypoint:
      - /bin/bash
      - -c
      - ./launch_ganache.bash; bash
    environment:
      - SGX_MODE=${SGX_MODE}
    volume: "built_contracts:/root/enigma-contract/build/contracts"

  p2p:
    image: avishaiw/enigma_p2p:0.1
    deploy:
      placement:
        constraints:
          - node.labels.type == worker
      mode: global
    stdin_open: true
    tty: true
    networks:
      - net
    hostname: p2p
    entrypoint:
      - /bin/bash
      - -c
      - ./start_worker.bash; bash
    environment:
      - NETWORK=${COMPOSE_PROJECT_NAME}

  client:
    image: avishaiw/enigma_contract:0.1
    deploy:
      placement:
        constraints:
          - node.labels.type == client
    stdin_open: true
    tty: true
    networks:
      - net
    hostname: client
    environment:
      - NETWORK=${COMPOSE_PROJECT_NAME}
      - NODES
      - SGX_MODE
    volume: "built_contracts:/root/enigma-contract/build/contracts"

  core:
    image: avishaiw/enigma_core:0.1
    deploy:
      placement:
        constraints:
          - node.labels.type == worker
      mode: global
    stdin_open: true
    tty: true
    hostname: core
    networks:
      - net

  km:
    image: avishaiw/enigma_km:0.2
    deploy:
      placement:
        constraints:
          - node.labels.type == km
    stdin_open: true
    tty: true
    hostname: km
    networks:
      - net

networks:
  net:

volumes:
  built_contracts:
  shared:
