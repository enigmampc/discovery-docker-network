version: '3'

services:

  contract:
    build:
      context: enigma-contract
      args:
        - SGX_MODE=${SGX_MODE}
        - GIT_BRANCH_CONTRACT=${GIT_BRANCH_CONTRACT}
    deploy:
      placement:
        constraints:
          - node.labels.type == contract
    stdin_open: true
    tty: true
    networks:
      - net
    hostname: contract
    entrypoint:
      - /bin/bash
      - -c
      - ./launch_ganache.bash; bash
    environment:
      - SGX_MODE=${SGX_MODE}

  p2p:
    build:
      context: enigma-p2p
      args:
        - GIT_BRANCH_P2P=${GIT_BRANCH_P2P}
    deploy:
      placement:
        constraints:
          - node.labels.type == worker
      mode: global
    stdin_open: true
    tty: true
    networks:
      - net
    hostname: p2p
    entrypoint:
      - /bin/bash
      - -c
      - ./start_worker.bash; bash
    environment:
      - NETWORK=${COMPOSE_PROJECT_NAME}

  client:
    build:
      context: enigma-contract
      args:
        - GIT_BRANCH_CONTRACT=${GIT_BRANCH_CONTRACT}
    deploy:
      placement:
        constraints:
          - node.labels.type == client
    stdin_open: true
    tty: true
    networks:
      - net
    hostname: client
    environment:
      - NETWORK=${COMPOSE_PROJECT_NAME}
      - NODES
      - SGX_MODE

  core:
    build:
      context: enigma-core
      args:
        - SGX_MODE=${SGX_MODE}
        - GIT_BRANCH_CORE=${GIT_BRANCH_CORE}
    deploy:
      placement:
        constraints:
          - node.labels.type == worker
      mode: global
    stdin_open: true
    tty: true
    hostname: core
    networks:
      - net

  km:
    build:
      context: enigma-core
      dockerfile: Dockerfile.km
      args:
        - SGX_MODE=${SGX_MODE}
        - GIT_BRANCH_CORE=${GIT_BRANCH_CORE}
    deploy:
      placement:
        constraints:
          - node.labels.type == km
    stdin_open: true
    tty: true
    hostname: km
    networks:
      - net

networks:
  net:

volumes:
  built_contracts:
  shared:
